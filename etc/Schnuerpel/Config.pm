######################################################################
#
# $Id: Config.pm 383 2010-09-13 13:09:12Z alba $
#
# This is an empty example for Config.pm released to public domain.
# On installation you should change/add a few keys.
# Read comments below for instructions.
# Keep this file in a save place with restrictive file permission.
#
######################################################################

package Schnuerpel::Config;

require Exporter;
@ISA = qw(Exporter);
@EXPORT_OK = qw(
  $APPROVED_ALLOWED
  &CANCEL_LOCK
  &CANCEL_MISSING_TARGET
  &CANCEL_ONLY_AUTHORIZED
  %CANCEL_USER
  &CLEAN_PATH
  %CLOAKED_USER
  %CONTROL_USER
  &CREATE_MISSING_X_TRACE
  &CROSSPOST_REQUIRES_FUP2
  &DB_DATABASE
  &DB_PASSWD
  &DB_USER
  %FORCE_FROM
  $GROUPS_ACCEPTING_ANY_CANCEL
  $INVALID_FROM
  $INVALID_REPLY_TO
  &KEY
  &KEYSIZE
  &LDAP_HOST
  &LDAP_LOCALADDR
  &LDAP_SEARCH_BASE
  %MODERATOR_USER
  $NEWGROUP_ALLOWED
  &LOCAL_PATH_ID
  &REJECT_INVALID_CANCEL
  &SAFE_CANCEL_PATH
);

use strict;

######################################################################
# Used by: filter_nnrpd.pl

use constant KEYSIZE => 32;

# Use "crypt-posting -new" to generate new key values including
# working time stamp. Insert them at the top of array KEY.
#
# Used by: filter_nnrpd.pl

use constant KEY => (
  # initial value
  [ 0, '0' x KEYSIZE ],
);

######################################################################
#
# If the header X-Trace does not exist then create one. This is useful
# if you combine a nnrpd from INN 2.6.x (or newer) with an innd from
# INN 2.5.x (or older).
#
# "X-Trace" was used to implement option "O" in the newsfeeds file.
# It has be replaced with "Injection-Info" in INN 2.6.x.
#
# Used by: filter_nnrpd.pl

use constant CREATE_MISSING_X_TRACE => 0;

######################################################################
#
# This value should be changed on install but then never again.
# A simple way to get 20 random characters:
#
# perl -e 'use Schnuerpel::RandPasswd(chars);print chars(20, 20)'
#
# Used by: filter_nnrpd.pl

use constant CANCEL_LOCK => '0000000000000000000';

######################################################################
#
# If INND is running without option -C then INND will execute cancel
# messages and supersedes that are not rejected, i.e. it will either
# a) remove the target posting and keep the cancel/supersede
# b) or reject the cancel/supersede
#
# However, Schnuerpel's verify_cancel function already calls
# INN::cancel (or INN::addhist) to remove the target. Thus you
# can add statement
#
#    innflags: -C
#
# to inn.conf and then can chose whether to keep (and propagate)
# invalid cancels/supersedes.
#
# INND is by default configured without option -C. The default
# setting of REJECT_INVALID_CANCEL reflects this. However, it
# is recommended to add -C and set REJECT_INVALID_CANCEL to 0.
#
# Used by: filter_innd.pl

use constant REJECT_INVALID_CANCEL => 1;

######################################################################
#
# If true then cancel controls and supersedes are only executed if
# they are authorized. There are three authorization methods:
# - "Cancel-Key:" header matches "Cancel-Lock:" of target post
# - "Newsgroups:" header matches GROUPS_ACCEPTING_ANY_CANCEL
# - "Path:" header matches SAFE_CANCEL_PATH
#
# If CANCEL_ONLY_AUTHORIZED is true then REJECT_INVALID_CANCEL
# must be false and INND must be running with option -C. Otherwise
# unauthorized supersede postings are lost.
#
# Used by: filter_innd.pl

use constant CANCEL_ONLY_AUTHORIZED => 0;

######################################################################
#
# If the target of a cancel message is not found in news spool then
# we can't verify the cancel key. There are three benign reasons for
# this two happen:
# 1. The target posting was filtered by cleanfeed
# 2. The cancel is redundant, e.g. concurrent spam cancels,
#    NoCeM, ctlinnd cancel
# 3. A cancel bot on an upstream server filters the target posting.
#
# Note that in the third case the target can still arrive. Some
# sites process no cancels at all, others are just damn slow.
# If CANCEL_MISSING_TARGET is true then INN::addhist is called to
# make sure that target postings arriving after the cancel will be
# rejected, i.e. the cancel is effectively executed.
#
# This flag is ignored (and INN::addhist is not called) if
# CANCEL_ONLY_AUTHORIZED is true.
#
# Used by: filter_innd.pl

use constant CANCEL_MISSING_TARGET => 1;

######################################################################
#
# The set of Path IDs generated by this news systems, e.g. through
# the value of "pathhost" in "inn.conf", or the value of "domain"
# in "readers.conf".
#
# --------------------------------------------------------------------
# If a cancel or supersede
# - is not authorized
# - and has a X-Trace or Injection-Info header
# - and the first word of this header is found in this hash
# then the cancel/supersede is rejected,
# even if REJECT_INVALID_CANCEL is false.
#
# This feature is a crude way to disable all third-party cancels
# originating from your site. See CANCEL_ONLY_AUTHORIZED for a
# description of available authorization methods.
#
# Used by: filter_innd.pl
# --------------------------------------------------------------------
# When the post of a local user is recorded in table "r_post" then
# only path elements not found in this hash are stored.
#
# Used by: filter_nnrpd.pl
# --------------------------------------------------------------------

use constant LOCAL_PATH_ID => 
{
  # Example:
  # 'news.albasani.net' => undef,
};

######################################################################
#
# Groups for testing cancel bots.
#
# Used by: filter_innd.pl
# Used in this context:
#   if ($group =~ m/^(?:$GROUPS_ACCEPTING_ANY_CANCEL)[^,]*/o)
#

our $GROUPS_ACCEPTING_ANY_CANCEL = join('|',
  'de\.alt\.0d$',
  'alt\.0d$'
);

######################################################################
#
# SAFE_CANCEL_PATH is for peers that don't implement Cancel-Lock
# but have an alternative means to disable all third-party cancels
# originating from their site.
#
# This feature is not very useful since the path string must match
# exactly. If the first instance of the article arrives through an
# untrusted path then
# - SAFE_CANCEL_PATH does not authorize
# - INN will reject all later instances of the articles since the
#   message ID was entered into the history
#
# Used by: filter_innd.pl
#
# Example:
# use constant SAFE_CANCEL_PATH => {
#   'news.albasani.net!not-for-mail' => 1
# };

use constant SAFE_CANCEL_PATH => undef;

######################################################################
# Hierarchies where everybody is allowed to send newgroups to.
#
# Used in this context:
#   if ($group =~ m/^(?:$NEWGROUP_ALLOWED)[^,]*/o)
#
# Used by: filter_innd.pl

our $NEWGROUP_ALLOWED = join('|',
  'free\.',
  'oesterreich\.'
);

######################################################################
# Groups where everybody is allowed to set Approved: header.
#
# Used in this context:
#   if ($group =~ m/^(?:$APPROVED_ALLOWED)$/o)
#
# Used by: filter_innd.pl

our $APPROVED_ALLOWED = join('|',
  'alt\.dev\.null',
  'alt\.sysadmin\.recovery',
  'de\.alt\.0d',
);

######################################################################
# Users that can send any newgroup/rmgroup/checkgroups.
# Key is userid, value is newsgroup pattern in "Control:" header.
# Empty string matches all groups.
#
# The format of newgroup/rmgroup is standardized:
# - Control: newgroup ch.talk.moderated moderated
#
# However, there are multiple formats for checkgroups:
# - Message-ID: <1282356241.31244@news.a3.xs4all.nl>
#   Control: checkgroups
# - Message-ID: <i5k2fi$7gr$1@news2.open-news-network.org>
#   Control: checkgroups opennews
# - Message-ID: <checkgroups-1248856588@news.albasani.net>
#   Control: checkgroups ch #2009072901
#
# The first checkgroups format is unsafe and not supported. The other
# three formats can be covered with one pattern, e.g. '^ch(?:$|\s|\.)'
#
# Used by: filter_nnrpd.pl

our %CONTROL_USER = (
# 'alexander.bartolich@gmx.at' => '^de\.alt(?:$|\s|\.)'
);

######################################################################
# Users that can send third party cancels (for future use)

our %CANCEL_USER = (
#  'alexander.bartolich@gmx.at' => 1,
);

######################################################################
# These users are required to have certain string in their From:
#
# Used by: filter_nnrpd.pl

our %FORCE_FROM = (
#  'alexander.bartolich@gmx.at' => '<alexander.bartolich@gmx.at>',
);

######################################################################
# No From: may match this pattern

our $INVALID_FROM = '\b(?:' . join('|',
# 'alexander\.bartolich@gmx\.at'
) . ')\b';

######################################################################
# No Reply-To: may match this pattern
#
# Reply-To is optional and can be omitted. It makes no sense to
# give a non-working address here.

our $INVALID_REPLY_TO = '[.@](?:' . join('|',
  'example',
  'invalid',
  'mailinator\.com',
  'test',
  'trash-mail\.com'
) . ')>?\s*$';

######################################################################
# Postings of these users are modified as little as possible. The
# headers Cancel-Lock, X-User-ID and X-NNTP-Posting-Host are not
# added. Injection-Info, X-Trace and X-NNTP-Posting-Host are removed
# if they exist. An existing Cancel-Lock (set by the news reader) is
# not modified. Path is modified as if CLEAN_PATH had the value '1036'.

our %CLOAKED_USER = (
#  'alexander.bartolich@gmx.at' => 1,
);

######################################################################
# According to RFC 5537, section 3.2.1, an injecting agent SHOULD
# prepend the <path-diagnostic> "!.POSTED", optionally followed by
# "." and the FQDN or IP address of the source, to the Path header
# field content. With INN 2.6.x is compliant and produces a Path
# that reveils the posting host, e.g.
#
#     news.albasani.net!.POSTED.127.0.0.1!not-for-mail
# 
# - If CLEAN_PATH is not defined then Path is not modified.
# - If CLEAN_PATH equals "1036" then the complete path diagnostic
#   is removed (in above example: "!.POSTED.127.0.0.1")
# - If CLEAN_PATH equals "5537loose" then only the IP address is
#   removed from the diagnostic (in above example: ".127.0.0.1")

use constant CLEAN_PATH => undef;
# use constant CLEAN_PATH => '1036';
# use constant CLEAN_PATH => '5537loose';

######################################################################
# Parameter "access:" in readers.conf applies to all groups. If you
# use "access:" to give a user permission to set the Approved: header
# then that user can set it with any postings to any group.
#
# With %MODERATOR_USER you have fined grained control. Key is userid,
# value is newsgroup pattern. Empty string matches all groups.
#
# Note: The default configuration of access group parameter "access:"
# in readers.conf denies every user the permission to set the
# Approved: header.
#
# Note: %CONTROL_USER implies the permission to set Approved: header,
# i.e. you don't have to duplicate entries of %CONTROL_USER here.
#
# Used by: filter_nnrpd.pl

use constant ALBA_MODERATOR =>
  '(?:^|,)(?:' . join('|',
    'albasani\.',
    'at\.usenet\.cancel-reports',
    'de\.admin\.net-abuse\.announce',
    'schule\.cancelreport'
  ) . ')';

our %MODERATOR_USER = (
#  'alexander.bartolich@gmx.at' => ALBA_MODERATOR,
);

######################################################################
#
# Hierarchies where crossposts are allowed only if accompanied
# by a follow-up-to to a single group
#
use constant CROSSPOST_REQUIRES_FUP2 => join('|',
  '[^, ]*[.+-](?:0d|kook|politics|politiek|politik|politique)',
  'alt\.config',
  'ch\.talk',
  'de\.alt\.gruppenkasper',
  'news\.groups',
  'soc\.culture\.',
);

######################################################################
# Used with DBI::connect. Leave undefined to disable functionality
# requiring database access.

# Example: 'DBI:mysql:database=dbname;host=localhost';
use constant DB_DATABASE => undef;

use constant DB_USER => undef;
use constant DB_PASSWD => undef;

######################################################################
# Used with Net::LDAP. Leave undefined to disable functionality
# requiring LDAP access.
#
# HOST may be a host name or an IP number. TCP port may be specified
# after the host name followed by a colon (such as localhost:10389).
# The default TCP port for LDAP is 389.

use constant LDAP_HOST => undef;
use constant LDAP_SEARCH_BASE => undef;
use constant LDAP_LOCALADDR => undef;

######################################################################
1;
######################################################################
